@page "/OMS/OrderHistory"
@using BlazorBootstrap
@rendermode InteractiveServer
@using OMS_Test.Services
@inject MockDataService MockData
@inject NavigationManager Navigation

<PageTitle>Order history</PageTitle>

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<div class="topnav">
  <a href="./OMS/Manage">OMS</a>
  <a href="./OMS/SalesReportsOverview">Sales Reports</a>
</div>

<div class="container mt-4">
    <h3>Order History</h3>
    <div class="row mt-4 justify-content-center">
        <div class="col-12">
            <div class="d-flex align-items-center">
                <input type="text" value="@searchText" @oninput="OnSearchTextChanged"
                    class="form-control flex-grow-1"
                    placeholder="Search for an order ID..." />
            </div>
        </div>
    </div>
    <div class="mt-4">
        <div class="card">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <small class="mb-0">Search results</small>
                <div class="dropdown">
                    <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                        Page Size: @pageSize
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><button class="dropdown-item" @onclick="() => SetPageSize(10)">10</button></li>
                        <li><button class="dropdown-item" @onclick="() => SetPageSize(25)">25</button></li>
                        <li><button class="dropdown-item" @onclick="() => SetPageSize(50)">50</button></li>
                    </ul>
                </div>
            </div>
            <div class="card-body">
                @if (filteredOrders.Count == 0 && !string.IsNullOrWhiteSpace(searchText))
                {
                    <div class="text-center text-muted py-5">
                        <i class="bi bi-emoji-frown" style="font-size: 3rem;"></i>
                        <p class="mt-3">No results found for order ID: @searchText</p>
                    </div>
                }
                else
                {
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Name</th>
                                <th>Date</th>
                                <th>Cost</th>
                            </tr>
                        </thead>            
                        <tbody>
                            @foreach (var order in filteredOrders)
                            {
                                <tr @onclick="() => NavigateToOrderDetails(order.OrderId.ToString())" style="cursor: pointer;">
                                    <td>@order.OrderId</td>
                                    <td>@order.Customer</td>
                                    <td>@order.OrderDate.ToString("dd MMM yyyy")</td>
                                    <td>@MockData.CalculateOrderTotal(order).ToString("0.00") DKK</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <div class="d-flex justify-content-between align-items-center mt-3">
                        <button class="btn btn-outline-primary" @onclick="PreviousPage" disabled="@(currentPage == 1)">
                            <i class="bi bi-chevron-left"></i> Previous
                        </button>
                        <span>Page @currentPage of @totalPages</span>
                        <button class="btn btn-outline-primary" @onclick="NextPage" disabled="@(currentPage == totalPages)">
                            Next <i class="bi bi-chevron-right"></i>
                        </button>
                    </div>

                }
            </div>
        </div>
    </div>
</div>

@code 
{
    private string? searchText = string.Empty;
    private List<OrderLine>? orders;

    private int currentPage = 1;
    private int pageSize = 10;

    protected override void OnInitialized()
    {
        orders = MockData.OrderLines;
    }

    private List<OrderLine> filteredOrders => pagedOrders.ToList();

    private IEnumerable<OrderLine> pagedOrders =>
        orders?
            .Where(o => string.IsNullOrWhiteSpace(searchText) || o.OrderId.ToString().Contains(searchText, StringComparison.OrdinalIgnoreCase))
            .OrderBy(o => o.OrderId)
            .Skip((currentPage - 1) * pageSize)
            .Take(pageSize)
        ?? Enumerable.Empty<OrderLine>();

    private int totalFilteredCount => orders?
        .Count(o => string.IsNullOrWhiteSpace(searchText) || o.OrderId.ToString().Contains(searchText, StringComparison.OrdinalIgnoreCase))
        ?? 0;

    private int totalPages => (int)Math.Ceiling((double)totalFilteredCount / pageSize);

    private void SetPageSize(int size)
    {
        pageSize = size;
        currentPage = 1;
    }

    private void NextPage()
    {
        if (currentPage < totalPages)
            currentPage++;
    }

    private void PreviousPage()
    {
        if (currentPage > 1)
            currentPage--;
    }

    private void NavigateToOrderDetails(string orderId)
    {
        Navigation.NavigateTo($"/OMS/Order/{orderId}");
    }

    private void OnSearchTextChanged(ChangeEventArgs e)
    {
        searchText = e.Value?.ToString();
        currentPage = 1;
    }
}