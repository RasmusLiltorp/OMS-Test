@page "/OMS/ProductPerformance"
@using BlazorBootstrap
@using OMS_Services
@inject DataService DataService
@rendermode InteractiveServer
@using DTOs
@inject NavigationManager NavigationManager

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">

<PageTitle>Order Product Search</PageTitle>

<!-- Top navbar -->
<div class="topnav">
    <a href="../OMS/Manage">OMS</a>
    <a class="active" href="./OMS/SalesReportsOverview">Sales Reports</a>
    <a href="./OMS/Stock">Stock</a>
</div>

<!-- Searchbar -->
<div class="mb-3 mt-4 d-flex justify-content-center align-items-center">
    <TextInput @bind-Value="@productId" style="width: 60%;" />
    <button class="btn btn-outline-primary ms-1" type="button" @onclick="PerformSearch">
        <i class="bi bi-search"></i>
    </button>
</div>

<!-- Search container -->
<div class="container mt-4">
    <div class="d-flex align-items-center justify-content-center mb-3">
        <div class="d-flex align-items-center">
            <small class="me-2">From:</small>
            <DateInput TValue="DateOnly" @bind-Value="@fromDate" Placeholder="From Date" class="form-control-sm"
                style="width: 150px;" />
        </div>
        <div class="d-flex align-items-center ms-3">
            <small class="me-2">To:</small>
            <DateInput TValue="DateOnly" @bind-Value="@toDate" Placeholder="To Date" class="form-control-sm"
                style="width: 150px;" />
        </div>
    </div>
    <div class="mt-2">
        <div class="card">
            <div class="card-header bg-light">
                <small class="mb-0">Find orders based on product ID</small>
            </div>
            <div class="card-body">
                @if (hasSearched == false)
                {
                    <div class="text-center text-muted py-5">
                        <i class="bi bi-search" style="font-size: 3rem;"></i>
                        <p class="mt-3">Enter a product ID and click search to view results</p>
                    </div>
                }
                else if (searchResults.Count == 0)
                {
                    <div class="text-center text-muted py-5">
                        <i class="bi bi-emoji-frown" style="font-size: 3rem;"></i>
                        <p class="mt-3">No results found for product ID: @searchText</p>
                    </div>
                }
                else
                {
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Order ID</th>
                                <th>Customer</th>
                                <th>Order Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in searchResults)
                            {
                                <tr style="cursor: pointer" @onclick="() => NavigateToOrderDetails(order.OrderId)">
                                    <td><a href="/oms/order/@order.OrderId">@order.OrderId</a></td>
                                    <td>@order.CustomerInfo.Name</td>
                                    <td>@order.Date.ToString("yyyy-MM-dd")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string? productId = null;
    private bool hasSearched = false;
    private string? searchText = "";
    private DateOnly fromDate = DateOnly.FromDateTime(DateTime.Now);
    private DateOnly toDate = DateOnly.FromDateTime(DateTime.Now.AddDays(1));
    private List<OrderDTO> searchResults = new List<OrderDTO>();

    protected override void OnInitialized()
    {
        searchResults = new List<OrderDTO>();
        DataService.OrdersFetched += OrdersHasFetched;
    }

    private void PerformSearch()
    {
        hasSearched = true;
        searchText = productId;
        if (string.IsNullOrWhiteSpace(productId))
        {
            searchResults = new List<OrderDTO>();
            return;
        }

        searchResults = DataService.OrderLines
        .Where(order =>
        order.LineElements.Any(line => line.ProductUuid.ToString().Contains(productId, StringComparison.OrdinalIgnoreCase)) &&
        order.Date >= fromDate.ToDateTime(TimeOnly.MinValue) &&
        order.Date <= toDate.ToDateTime(TimeOnly.MaxValue))
        .ToList();

        StateHasChanged();
    }

    private void NavigateToOrderDetails(string orderId)
    {
        NavigationManager.NavigateTo($"/oms/order/{orderId}");
    }

    public void OrdersHasFetched(object? sender, EventArgs e)
    {
        StateHasChanged();
    }
}
